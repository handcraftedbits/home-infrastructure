- block:
  - name: install packages
    apt:
      force_apt_get: true
      name: "{{item}}"
      state: present
    loop:
      - dirmngr
      - gnupg
      - pinentry-curses
      - scdaemon

  - name: fetch keyserver certificate
    get_url:
      dest: /etc/ssl/certs/sks-keyservers.netCA.pem
      url: https://sks-keyservers.net/sks-keyservers.netCA.pem
  become: true

- name: fetch public key
  shell: gpg --keyserver pool.sks-keyservers.net --recv-keys {{dev_gpg_params.public_key}}
  changed_when: "dev_gpg_internal_key_fetch.stderr is not search('unchanged: 1')"
  register: dev_gpg_internal_key_fetch

- block:
  # Taken from https://blog.tersmitten.nl/how-to-ultimately-trust-a-public-key-non-interactively.html

  - name: trust public key
    shell: >
      echo "$(gpg --list-keys --fingerprint --keyid-format 0xlong | grep {{dev_gpg_params.public_key}} -A 1 | tail -1
      | tr -d '[:space:]' | awk 'BEGIN { FS = "=" } ; { print $2 }'):6:" | gpg --import-ownertrust

  - name: import private key
    shell: echo "{{dev_gpg_params.private_key}}" | gpg --import --batch

  - name: add key to sshcontrol
    shell: >
      echo "$(gpg --list-keys --keyid-format 0xlong --with-keygrip | grep {{dev_gpg_params.public_key}} -A 2 | tail -1
      | tr -d '[:space:]' | sed 's/^Keygrip=//')" > /home/{{dev_gpg_params.username}}/.gnupg/sshcontrol
  when: "dev_gpg_internal_key_fetch.stderr is not search('unchanged: 1')"

- name: link dotfiles
  file:
    dest: /home/{{dev_gpg_params.username}}/{{item.dest}}
    force: yes
    src: /home/{{dev_gpg_params.username}}/.cloned-repos/dotfiles/{{item.src}}
    state: link
  with_items:
    - dest: .gnupg/dirmngr.conf
      src: gnupg/dirmngr.conf
    - dest: .gnupg/gpg-agent.conf
      src: gnupg/gpg-agent.conf
    - dest: .gnupg/gpg.conf
      src: gnupg/gpg.conf

- name: get user ID
  shell: id -u {{dev_gpg_params.username}}
  register: dev_gpg_internal_uid

- name: update Zsh configuration to use gpg-agent for ssh-agent
  lineinfile:
    create: yes
    dest: /home/{{dev_gpg_params.username}}/.zshrc-extra
    line: "export SSH_AUTH_SOCK=/run/user/{{dev_gpg_internal_uid.stdout}}/gnupg/S.gpg-agent.ssh"
    regexp: "^export SSH_AUTH_SOCK"
    state: present

- name: update Zsh configuration to update gpg-agent TTY for pinentry-curses
  lineinfile:
    create: yes
    dest: /home/{{dev_gpg_params.username}}/.zshrc-extra
    line: "echo UPDATESTARTUPTTY | gpg-connect-agent > /dev/null"
    regexp: "^echo UPDATESTARTUPTTY"
    state: present
