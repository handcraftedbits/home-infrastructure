dependencies:
  - role: k8s/resource/namespace
    vars:
      k8s_resource_namespace_params:
        labels:
          app: "{{k8s_app_plantuml_internal.app_name}}"
        name: "{{k8s_app_plantuml_params.namespace | default(k8s_app_plantuml_defaults.namespace)}}"

  - role: k8s/resource/service
    vars:
      k8s_resource_service_params:
        labels:
          app: "{{k8s_app_plantuml_internal.app_name}}"
        name: "{{k8s_app_plantuml_params.name}}"
        namespace: "{{k8s_app_plantuml_params.namespace | default(k8s_app_plantuml_defaults.namespace)}}"
        spec:
          ports:
            - port: 80
              protocol: TCP
              targetPort: 8080
          selector:
            app: "{{k8s_app_plantuml_internal.app_name}}"

  - role: k8s/resource/ingress
    vars:
      k8s_resource_ingress_params:
        annotations:
          cert-manager.io/cluster-issuer: "{{k8s_app_plantuml_params.certificate_issuer}}"
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        labels:
          app: "{{k8s_app_plantuml_internal.app_name}}"
        name: "{{k8s_app_plantuml_params.name}}"
        namespace: "{{k8s_app_plantuml_params.namespace | default(k8s_app_plantuml_defaults.namespace)}}"
        spec:
          rules:
            - host: "{{k8s_app_plantuml_params.hostname}}"
              http:
                paths:
                  - backend:
                      serviceName: "{{k8s_app_plantuml_params.name}}"
                      servicePort: 80
          tls:
            - hosts:
                - "{{k8s_app_plantuml_params.hostname}}"
              secretName: "{{k8s_app_plantuml_params.name}}-tls"
